<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Covershot: Source: <%= filename %></title>
		<link rel="stylesheet" href="<%= pathToCSS %>/normalize.css">
		<link rel="stylesheet" href="<%= pathToCSS %>/covershot.css">

		<script type="text/javascript" src="<%= pathToScripts %>/jquery-1.7.1.min.js"></script>

		<script type="text/javascript" src="<%= pathToScripts %>/shCore.js"></script>
		<script type="text/javascript" src="<%= pathToScripts %>/shBrushJScript.js"></script>
		<link href="<%= pathToCSS %>/shCore.css" rel="stylesheet" type="text/css" />
		<link href="<%= pathToCSS %>/shThemeDefault.css" rel="stylesheet" type="text/css" />
	</head>
	<body>
		<aside id="homeButton">
			<a href="<%= pathToRoot %>/index.html"> <img src="<%= pathToRoot %>/resources/pancakes.jpg" alt="home" width="45" height="45"> </a>
	    </aside> 
		<div id="bodyWrapper">
			<header>
				<h1><%= filename %></h1>

					<ul class="summary">
						<li>
							<h3><span class="coverageData"><%= hits %></span> hits</h3>
						</li>
						<li>
							<h3><span class="coverageData"><%= misses %></span> misses</h3>
						</li>
						<li>
							<h3><span class="coverageData"><%= sloc %></span> SLoC</h3>
						</li>
						<li>
							<h3><span class="coverageData"><%= coverage.toFixed(0) %>%</span> coverage</h3>
						</li>
						<% if (jsmeter) { %>
						<li>
							<h3><span class="coverageData<%= (jsmeter.complexity > 10) ? ' red' : '' %>"><%= jsmeter.complexity %></span> complexity</h3>
						</li>
						<li>
							<h3><span class="coverageData<%= (jsmeter.mi < 40) ? ' red' : '' %>"><%= jsmeter.mi %></span> MI</h3>
						</li>
						<% } %>
					</ul>

			</header>
			<section id="bod">
				<section id="mainContent">
					<script type="syntaxhighlighter" class="brush: js; class-name: 'rounded'"><![CDATA[
						<% for (var i in source) { %> 
							<%= source[i].line %> <% } %> ]]></script>
				</section>
			</section>
		</div>
		<footer> 
			<p>Report generated by <a>Covershot</a> on <%= generated %>.</p> 
		</footer>
		<script type="text/javascript">
      function getUrlVars() {
        var vars = {};
        var parts = window.location.href.replace(/[?&]+([^=&#]+)=([^&#]*)/gi, function (m, key, value) {
          vars[key] = value;
        });
        return vars;
      }

      $(document).ready(function () {
        SyntaxHighlighter.all({'cb': function () {
          <% for (var i in source) { %>
            $('td.covgutter').append('<div class="line number<%= i %> index<%= i - 1 %> alt2">&nbsp;<%= source[i].coverage %>&nbsp;</div>');
          <% } %>

          var highlightStartLineNumber = getUrlVars()['highlightStartLineNumber'];
          var highlightEndLineNumber = getUrlVars()['highlightEndLineNumber'];
          if (highlightStartLineNumber && highlightEndLineNumber) {
            var bgColor = 'rgba(255, 255, 100, 0.62)';
            for (var line = highlightStartLineNumber; line <= highlightEndLineNumber; line++) {
              $('td.gutter div.number' + line).css('cssText', 'background-color: ' + bgColor + ' !important');
              $('td.covgutter div.number' + line).css('cssText', 'background-color: ' + bgColor + ' !important');
              $('td.code div.container div.number' + line).css('cssText', 'background-color: ' + bgColor + ' !important');
            }
          }

          var green = $.parseJSON('<%- JSON.stringify(green) %>');
          $.each(green, function (index, value) {
            $('td.gutter div.number' + value).html("<a name='line" + value + "'></a>" + value);
            var bgColor = 'rgba(121, 252, 121, 0.62)';
            if (value >= highlightStartLineNumber && value <= highlightEndLineNumber) {
              bgColor = 'rgba(255, 255, 100, 0.62)';
            }
            $('td.gutter div.number' + value).css('cssText', 'background-color: ' + bgColor + ' !important');
            $('td.covgutter div.number' + value).css('cssText', 'background-color: ' + bgColor + ' !important');
            $('td.code div.container div.number' + value).css('cssText', 'background-color: ' + bgColor + ' !important');
          });

          var red = $.parseJSON('<%- JSON.stringify(red) %>');
          $.each(red, function (index, value) {
            $('td.gutter div.number' + value).html("<a name='line" + value + "'></a>" + value);
            var bgColor = 'rgba(255, 0, 0, 0.32)';
            if (value >= highlightStartLineNumber && value <= highlightEndLineNumber) {
              bgColor = 'rgba(255, 255, 100, 0.62)';
            }
            $('td.gutter div.number' + value).css('cssText', 'background-color: ' + bgColor + ' !important');
            $('td.covgutter div.number' + value).css('cssText', 'background-color: ' + bgColor + ' !important; font-weight: bold !important');
            $('td.code div.container div.number' + value).css('cssText', 'background-color: ' + bgColor + ' !important');
          });
        }});
      });
		</script>
	</body>
</html>
